@import "../../style/theme/default";
@import "../../style/mixins/index";
@import "../../style/effects/index";

@prefix-btn: ~"@{maby-prefix}-btn";

.btn-base(@height, @padding, @font-size) {
  height: @height;
  padding: @padding;
  font-size: @font-size;
}
.btn-border(@border-color, @border-style : @border-style-base, @border-width : @border-width-base) {
  border-width: @border-width;
  border-style: @border-style;
  border-color: @border-color;
}
.btn-type(@btn-color, @btn-bg) {
  color: @btn-color;
  background: @btn-bg;
  text-align: center;
}
.@{prefix-btn} {
  font-weight: @btn-font-weight;
  .outline();
  .transform();
  &-size {
    &-default {
      .btn-base(@btn-height-base, @btn-padding-base, @btn-font-size-base);
    }
    &-large {
      .btn-base(@btn-height-lg, @btn-padding-lg, @btn-font-size-lg);
    }
    &-small {
      .btn-base(@btn-height-sm, @btn-padding-sm, @btn-font-size-sm);
    }
  }
  &-default {
    .btn-type(@btn-default-color, @btn-default-bg);
    .btn-border(@btn-default-border);
    .transition(all, 0.3s);
    &:hover {
      .btn-type(@btn-primary-color, @btn-default-bg);
      .btn-border(@btn-primary-bg);
      .transition(all, 0.3s);
    }
  }
  &-primary {
    .btn-type(@btn-primary-color, @btn-primary-bg);
    .btn-border(@btn-primary-bg);
    .transition(all, 0.3s);
    &:hover {
      .btn-type(@btn-primary-bg, @btn-primary-color);
      .btn-border(@btn-primary-bg);
      .transition(all, 0.3s);
    };
    &:active {
      .btn-type(@btn-primary-bg, @btn-primary-color);
      .btn-border(@btn-primary-bg);
      .transition(all, 0.1s);
    }
  }
  &-danger {
    .btn-type(@btn-danger-color, @btn-danger-bg);
    .btn-border(@btn-danger-border);
    .transition(all, 0.3s);
    &:hover {
      .btn-type(@btn-danger-bg, @btn-danger-color);
      .btn-border(@btn-danger-color);
      .transition(all, 0.3s);
    }
  }
  &-disabled {
    .btn-type(@btn-disable-color, @btn-disable-bg);
    .btn-border(@btn-disable-border);
  }
  &-dashed {
    .btn-type(@btn-default-color, @btn-default-bg);
    .btn-border(@btn-primary-color, dashed);
    .transition(all, 0.3s);
    &:hover {
      .btn-type(@btn-primary-color, @btn-primary-bg);
      .btn-border(@btn-primary-color);
      .transition(all, 0.3s);
    }
  }
}

@keyframes buttonEffect {
  to {
    opacity: 0;
    top: -6px;
    left: -6px;
    bottom: -6px;
    right: -6px;
    border-width: 6px;
  }
}
